# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'microwave.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QPalette
import sys
import qtawesome
import algorithm


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(816, 277)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(190, 10, 621, 211))
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.stackedWidget.addWidget(self.page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.lineEdit = QtWidgets.QLineEdit(self.page_2)
        self.lineEdit.setGeometry(QtCore.QRect(130, 50, 31, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.label_4 = QtWidgets.QLabel(self.page_2)
        self.label_4.setGeometry(QtCore.QRect(253, 82, 71, 20))
        self.label_4.setObjectName("label_4")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.page_2)
        self.lineEdit_3.setGeometry(QtCore.QRect(130, 110, 31, 31))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.pushButton = QtWidgets.QPushButton(self.page_2)
        self.pushButton.setGeometry(QtCore.QRect(60, 180, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.textBrowser = QtWidgets.QTextBrowser(self.page_2)
        self.textBrowser.setGeometry(QtCore.QRect(330, 20, 256, 181))
        self.textBrowser.setObjectName("textBrowser")
        self.label_3 = QtWidgets.QLabel(self.page_2)
        self.label_3.setGeometry(QtCore.QRect(130, 20, 101, 16))
        self.label_3.setObjectName("label_3")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.page_2)
        self.lineEdit_2.setGeometry(QtCore.QRect(180, 50, 31, 31))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.page_2)
        self.lineEdit_4.setGeometry(QtCore.QRect(180, 110, 31, 31))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.label = QtWidgets.QLabel(self.page_2)
        self.label.setGeometry(QtCore.QRect(0, 40, 121, 16))
        self.label.setObjectName("label")
        self.comboBox = QtWidgets.QComboBox(self.page_2)
        self.comboBox.setGeometry(QtCore.QRect(10, 60, 69, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox_2 = QtWidgets.QComboBox(self.page_2)
        self.comboBox_2.setGeometry(QtCore.QRect(10, 120, 69, 22))
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.label_2 = QtWidgets.QLabel(self.page_2)
        self.label_2.setGeometry(QtCore.QRect(0, 100, 121, 16))
        self.label_2.setObjectName("label_2")
        self.stackedWidget.addWidget(self.page_2)
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 30, 160, 191))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.verticalLayoutWidget)
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.verticalLayout.addWidget(self.textBrowser_2)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(20, 10, 54, 12))
        self.label_5.setObjectName("label_5")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 816, 23))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        MainWindow.setMenuBar(self.menubar)
        self.actionMatrix_Coefficient_Transfer = QtWidgets.QAction(MainWindow)
        self.actionMatrix_Coefficient_Transfer.setObjectName("actionMatrix_Coefficient_Transfer")
        self.actionCircuit_Parameters_to_matrices = QtWidgets.QAction(MainWindow)
        self.actionCircuit_Parameters_to_matrices.setObjectName("actionCircuit_Parameters_to_matrices")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionDevelop_team = QtWidgets.QAction(MainWindow)
        self.actionDevelop_team.setObjectName("actionDevelop_team")
        self.menu.addAction(self.actionMatrix_Coefficient_Transfer)
        self.menu.addAction(self.actionCircuit_Parameters_to_matrices)
        self.menu.addSeparator()
        self.menu.addAction(self.actionExit)
        self.menuAbout.addAction(self.actionDevelop_team)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_4.setText(_translate("MainWindow", "———>"))
        self.pushButton.setText(_translate("MainWindow", "Convert"))
        self.label_3.setText(_translate("MainWindow", "Matrix Elements"))
        self.label.setText(_translate("MainWindow", "Original Matrix"))
        self.comboBox.setItemText(0, _translate("MainWindow", "ABCD"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Z"))
        self.comboBox.setItemText(2, _translate("MainWindow", "Y"))
        self.comboBox.setItemText(3, _translate("MainWindow", "S"))
        self.comboBox_2.setItemText(0, _translate("MainWindow", "ABCD"))
        self.comboBox_2.setItemText(1, _translate("MainWindow", "Z"))
        self.comboBox_2.setItemText(2, _translate("MainWindow", "Y"))
        self.comboBox_2.setItemText(3, _translate("MainWindow", "S"))
        self.label_2.setText(_translate("MainWindow", "Target Matrix"))
        self.label_5.setText(_translate("MainWindow", "Log"))
        self.menu.setTitle(_translate("MainWindow", "功能选择"))
        self.menuAbout.setTitle(_translate("MainWindow", "About"))
        self.actionMatrix_Coefficient_Transfer.setText(_translate("MainWindow", "Matrix Coefficient Transform"))
        self.actionCircuit_Parameters_to_matrices.setText(_translate("MainWindow", "Circuit Parameters to matrices"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionDevelop_team.setText(_translate("MainWindow", "Develop team"))
        MainWindow.setWindowOpacity(0.9)  # 设置窗口透明度
        # MainWindow.setAttribute(QtCore.Qt.WA_TranslucentBackground) # 设置窗口背景透明
        # MainWindow.setWindowFlag(QtCore.Qt.FramelessWindowHint)  # 隐藏边框
        pe = QPalette()
        MainWindow.setAutoFillBackground(True)
        pe.setColor(QPalette.Window, Qt.lightGray)  # 设置背景色
        # pe.setColor(QPalette.Background,Qt.blue)
        MainWindow.setPalette(pe)
        MainWindow.setWindowTitle("微波网络参数矩阵转换可视化 v1.0.0 by Alex")
        spin_icon = qtawesome.icon('mdi.cat', color='black')
        self.pushButton.setIcon(spin_icon)  # 设置图标
        MainWindow.setWindowIcon(spin_icon)
        self.label.setStyleSheet('''QLabel{color:white;font-family:Roman times;}''')
        self.label_2.setStyleSheet('''QLabel{color:white;font-family:Roman times;}''')
        self.label_3.setStyleSheet('''QLabel{color:white;font-family:Roman times;}''')
        self.label_4.setStyleSheet('''QLabel{color:white;font-family:Roman times;}''')
        self.label_5.setStyleSheet('''QLabel{color:white;font-family:Roman times;}''')
        self.pushButton.setStyleSheet('''QPushButton{border:none;}
        QPushButton:hover{color:white;
                    border:2px solid #F3F3F5;
                    border-radius:35px;
                    background:Gray;}''')
        MainWindow.setFixedSize(MainWindow.width(), MainWindow.height())  # 禁止调整窗口大小

        self.pushButton.clicked.connect(self.clickButton)



    def clickButton(self):
        if len(self.lineEdit.text())==0 or len(self.lineEdit_2.text())==0 or len(self.lineEdit_3.text())==0 or len(self.lineEdit_4.text())==0:
            self.textBrowser.setText("<font color='red'>" + "矩阵元素不能为空!")
            return
        if self.comboBox.currentText() == "ABCD":
            # ABCD -> ZYS
            a = float(self.lineEdit.text())
            b = float(self.lineEdit_2.text())
            c = float(self.lineEdit_3.text())
            d = float(self.lineEdit_4.text())
            print(self.comboBox.currentIndex())
            print(self.comboBox_2.currentIndex())
            if (self.comboBox.currentIndex() == self.comboBox_2.currentIndex()):
                self.textBrowser.setText("<font color='red'>" + "目标矩阵与原矩阵类型不得相同!")
                return
            if (self.comboBox.currentIndex() == 0) and self.comboBox_2.currentIndex() == 1:  # abcd->z
                self.textBrowser.setText("<font color='blue'>" + "基于ABCD矩阵的Z矩阵转换如下：")
                self.textBrowser_2.append("[INFO] Z matrix generated!")
                matrix = algorithm.z_transition_function(a, b, c, d)
            elif (self.comboBox.currentIndex() == 0) and self.comboBox_2.currentIndex() == 2:  # abcd->y
                self.textBrowser.setText("<font color='blue'>" + "基于ABCD矩阵的Y矩阵转换如下：")
                self.textBrowser_2.append("[INFO] Y matrix generated!")
                matrix = algorithm.y_transition_function(a, b, c, d)
            elif (self.comboBox.currentIndex() == 0) and self.comboBox_2.currentIndex() == 3:  # abcd->s
                self.textBrowser.setText("<font color='blue'>" + "基于ABCD矩阵的S矩阵转换如下：")
                self.textBrowser_2.append("[INFO] S matrix generated!")
                matrix = algorithm.s_transition_function(a, b, c, d)

            for i in matrix:
                print(str(i)[1:-1])
                self.textBrowser.append(str(i)[1:-1])
                self.cursor = self.textBrowser.textCursor()
                self.textBrowser.moveCursor(self.cursor.End)
                QtWidgets.QApplication.processEvents()
            return




if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    widgets = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(widgets)
    widgets.show()
    sys.exit(app.exec_())
